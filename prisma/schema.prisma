// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  googleId  String?  @unique
  kakaoId   String?  @unique
  username  String
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  photos    Photo[]
  likes     Like[]
}

model Photo {
  id           Int      @id @default(autoincrement())
  url          String
  title        String?
  caption      String?
  format       String?
  date         String?
  deviceModel  String?
  lensModel    String?
  dimensions   String?
  iso          Int?
  focalLength  String?
  exposure     String?
  aperture     String?
  shutterSpeed String?
  latitude     Float?
  longitude    Float?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  likes        Like[]
}

model Like {
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  photo     Photo    @relation(fields: [photoId], references: [id], onDelete: Cascade)
  photoId   Int

  @@id(fields: [userId, photoId], name: "id")
}
